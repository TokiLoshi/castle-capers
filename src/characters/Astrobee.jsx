/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState } from "react";
import { useGLTF, useAnimations, useCursor } from "@react-three/drei";

const ACTION_MAP = {
	death: "CharacterArmature|Death",
	duck: "CharacterArmature|Duck",
	hitReact: "CharacterArmature|HitReact",
	idle: "CharacterArmature|Idle",
	idleGun: "CharacterArmature|Idle_Gun",
	jump: "CharacterArmature|Jump",
	jumpIdle: "CharacterArmature|Jump_Idle",
	jumpLande: "CharacterArmature|Jump_Land",
	no: "CharacterArmature|No",
	punch: "CharacterArmature|Punch",
	run: "CharacterArmature|Run",
	runGun: "CharacterArmature|Run_Gun",
	runGunShoot: "CharacterArmature|Run_Gun_Shoot",
	walk: "CharacterArmature|Walk",
	walkGun: "CharacterArmature|Walk_Gun",
	wave: "CharacterArmature|Wave",
	weapon: "CharacterArmature|Weapon",
	yes: "CharacterArmature|Yes",
};

const IDLE_ANIMATION_KEY = "idle";
const TRANSITION_DURATION = 0.5;

export function AstroBee({ currentAnimation = IDLE_ANIMATION_KEY, props }) {
	const group = useRef();
	const { nodes, materials, animations } = useGLTF(
		"models/characters/AstroBee.glb"
	);
	const { actions } = useAnimations(animations, group);
	console.log("Actions: ", actions);

	const currentActionRef = useRef(null);
	const timeoutRef = useRef(null);

	const [isClicked, setIsClicked] = useState(false);
	const [hovered, setHovered] = useState(false);

	useCursor(hovered /*'pointer', 'auto', document.body*/);

	return (
		<group ref={group} {...props} dispose={null}>
			<group name='Root_Scene'>
				<group name='RootNode'>
					<group
						name='CharacterArmature'
						rotation={[-Math.PI / 2, 0, 0]}
						scale={100}>
						<primitive object={nodes.Root} />
					</group>
					<skinnedMesh
						name='BarbaraTheBee'
						geometry={nodes.BarbaraTheBee.geometry}
						material={materials.Atlas}
						skeleton={nodes.BarbaraTheBee.skeleton}
						rotation={[-Math.PI / 2, 0, 0]}
						scale={100}
					/>
				</group>
			</group>
		</group>
	);
}

useGLTF.preload("models/characters/AstroBee.glb");
